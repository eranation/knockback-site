extends ../_layout/_layout_template

block title
  title= "Knockback.js Docs"

block includes
  link(rel="stylesheet",href="stylesheets/docs.css")

block navbar
  include ../_layout/_layout_mixin_page_navbar
  mixin pageNavbar('Docs', true)

block api_descriptions

  //////////////////////////////////
  // kb.RefCountable
  //////////////////////////////////
  h2='kb.RefCountable'
  div="The base class for all reference-counted classes"
  h4='Example:'
  pre(data-for='cs'): code.coffee.
    class MyClass extends kb.RefCountable
      constructor: ->
        super
        # do something

      __destroy: ->
        # clean up
        super

    my_instance = new MyClass()  # ref count: 1

    my_instance.retain()    # ref count: 2
    my_instance.release()   # ref count: 1

    my_instance.release()   # ref count: 0 and __destroy() called

  pre(data-for='js'): code.javascript.
    var MyClass = kb.RefCountable.extend({
      constructor: function(){
        kb.RefCountable.prototype.constructor.apply(this, arguments);
        // do something
      },
      __destroy: function(){
        // clean up
        kb.RefCountable.prototype.__destroy.apply(this, arguments);
      }
    });
    var my_instance = new MyClass();  // ref count: 1

    my_instance.retain();   // ref count: 2
    my_instance.release();  // ref count: 1

    my_instance.release();  // ref count: 0 and __destroy() called

  h3#extend='kb.RefCountable::extend(properties, [classProperties]) '
    span.label.label-success='class'
  div="Used to derive a class in JavaScript (when CoffeeScript is not used)"
  h4='Example:'
  pre(data-for='cs'): code.coffee.
    MyClass = kb.RefCountable.extend({
      constructor: (model) ->
        kb.RefCountable.prototype.constructor.apply(this, arguments)
        # to something

  pre(data-for='js'): code.javascript.
    var MyClass = kb.RefCountable.extend({
      constructor: function(model){
        kb.RefCountable.prototype.constructor.apply(this, arguments);
        // to something
      }
    });

  h3#constructor='constructor'
  div="Used to create a new instance"

  h3#retain='retain()'
  div="Increases reference count by 1"
  pre(data-for='cs'): code.coffee.
    my_instance.retain()
  pre(data-for='js'): code.javascript.
    my_instance.retain();

  h3#ref_count='refCount()'
  div="Returns the current reference count"
  pre(data-for='cs'): code.coffee.
    my_instance.refCount()
  pre(data-for='js'): code.javascript.
    my_instance.refCount();

  h3#release='release()'
  div="Decreases reference count by 1 and calls __destroy() when ref_count becomes 0"
  pre(data-for='cs'): code.coffee.
    my_instance.release()
  pre(data-for='js'): code.javascript.
    my_instance.release();

  h3#__destroy='__destroy() '
    span.label='abstract'
  div="Called when reference count becomes 0"
  pre(data-for='cs'): code.coffee.
    my_instance = new MyClass()       # ref count: 1
    my_instance.release()             # ref count: 0 and __destroy() called
  pre(data-for='js'): code.javascript.
    var my_instance = new MyClass();  // ref count: 1
    my_instance.release();            // ref count: 0 and __destroy() called

block content
  include _mixin_docs_index

  div.api.container
    h1="Knockback.js API and Usage Examples"
    div.container-fluid
      div.row-fluid
        div.span3.api.index
          mixin docsIndex('kb.RefCountable', [{extend: 'extend'}, {constructor: 'constructor'}, {retain: 'retain'}, {ref_count: 'refCount'}, {release: 'release'}, {__destroy: '__destroy'}])
        div.span9.api.descriptions
          div.content
            div.wrapper
              block api_descriptions
