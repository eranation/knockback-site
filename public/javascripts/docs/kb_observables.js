// Generated by CoffeeScript 1.3.1
(function() {
  var _base;

  window.kb || (window.kb = {});

  kb.docs || (kb.docs = {});

  (_base = kb.docs).kb_observables || (_base.kb_observables = {});

  kb.docs.kb_observables = {
    overview: function() {
      var ContactViewModel, model, view_model;
      ContactViewModel = function(model) {
        this.attribute_observables = kb.observables(model, {
          name: {
            key: 'name',
            read_only: true
          },
          number: 'number',
          date: {
            key: 'date',
            localizer: LongDateLocalizer
          },
          name2: {
            key: 'name',
            read_only: true
          }
        }, this);
        return this;
      };
      model = new Contact({
        name: 'John',
        number: '555-555-5558',
        date: new Date(1940, 10, 9)
      });
      return view_model = new ContactViewModel(model);
    },
    kb_observables: function() {
      var view_model;
      view_model = {};
      return kb.observables(model, {
        name: 'name',
        date: 'date'
      }, view_model);
    },
    constructor: function() {
      var view_model;
      view_model = {};
      return new kb.Observables(model, {
        name: 'name',
        date: 'date'
      }, view_model);
    },
    setToDefault: function() {
      var ContactViewModel, view_model;
      ContactViewModel = function(model) {
        this.loading_message = ko.observable('(none)');
        this.attribute_observables = kb.observables(model, {
          name: {
            key: 'name',
            "default": this.loading_message
          },
          number: {
            key: 'number',
            "default": this.loading_message
          }
        }, this);
        return this;
      };
      view_model = new ContactViewModel(new Backbone.Model({
        name: 'Bob'
      }));
      view_model.setToDefault();
      return view_model.loading_message('(nada)');
    }
  };

}).call(this);
